{"ast":null,"code":"var _jsxFileName = \"/Users/raghav/Desktop/Raghav/web development/ReactDSA/react-quiz-app/src/components/Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport AnswerButton from './AnswerButton';\nimport Question from './Question';\nimport qdata from '../question.json';\nimport FinalScore from './FinalScore';\nimport DifficultySelector from './DifficultySelector';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [isQuizFinished, setIsQuizFinished] = useState(false);\n  const [difficulty, setDifficulty] = useState('easy');\n  useEffect(() => {\n    fetch('/react-quiz-app/public/question.json').then(response => response.json()).then(data => {\n      setQuestions(data[difficulty]);\n    }).catch(error => console.error(\"Error loading questions:\", error));\n  }, [difficulty]);\n  const handleAnswerSelection = isCorrect => {\n    if (isCorrect) {\n      setScore(prevScore => prevScore + 1);\n    }\n    const nextQuestion = currentQuestionIndex + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestionIndex(nextQuestion);\n    } else {\n      setIsQuizFinished(true);\n    }\n  };\n  const restartQuiz = () => {\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setIsQuizFinished(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isQuizFinished ? /*#__PURE__*/_jsxDEV(FinalScore, {\n      score: score,\n      onRestart: restartQuiz\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(DifficultySelector, {\n        selectedDifficulty: setDifficulty,\n        onDifficultyChange: setDifficulty\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), questions.length > 0 && /*#__PURE__*/_jsxDEV(Question, {\n        question: questions[currentQuestionIndex].question,\n        answers: questions[currentQuestionIndex].answers,\n        onAnswerSelection: handleAnswerSelection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(Quiz, \"I+Y/UOkbFo+02kcImzaE6PH+q8U=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","AnswerButton","Question","qdata","FinalScore","DifficultySelector","jsxDEV","_jsxDEV","Fragment","_Fragment","Quiz","_s","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","score","setScore","isQuizFinished","setIsQuizFinished","difficulty","setDifficulty","fetch","then","response","json","data","catch","error","console","handleAnswerSelection","isCorrect","prevScore","nextQuestion","length","restartQuiz","children","onRestart","fileName","_jsxFileName","lineNumber","columnNumber","selectedDifficulty","onDifficultyChange","question","answers","onAnswerSelection","_c","$RefreshReg$"],"sources":["/Users/raghav/Desktop/Raghav/web development/ReactDSA/react-quiz-app/src/components/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport AnswerButton from './AnswerButton';\nimport Question from './Question';\nimport qdata from '../question.json';\nimport FinalScore from './FinalScore';\nimport DifficultySelector from './DifficultySelector';\n\nconst Quiz = () => {\n    const [questions, setQuestions] = useState([]);\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n    const [score, setScore] = useState(0);\n    const [isQuizFinished, setIsQuizFinished] = useState(false);\n    const [difficulty, setDifficulty] = useState('easy');\n\n    useEffect(() => {\n        fetch('/react-quiz-app/public/question.json')\n            .then(response => response.json())\n            .then(data => {\n                setQuestions(data[difficulty]);\n            })\n            .catch(error => console.error(\"Error loading questions:\", error));\n    }, [difficulty]);\n\n    const handleAnswerSelection = (isCorrect) => {\n        if (isCorrect) {\n            setScore(prevScore => prevScore + 1);\n        }\n        const nextQuestion = currentQuestionIndex + 1;\n        if (nextQuestion < questions.length) {\n            setCurrentQuestionIndex(nextQuestion);\n        } else {\n            setIsQuizFinished(true);\n        }\n    };\n\n    const restartQuiz = () => {\n        setCurrentQuestionIndex(0);\n        setScore(0);\n        setIsQuizFinished(false);\n    };\n\n    return (\n        <div>\n            {isQuizFinished ? (\n                <FinalScore score={score} onRestart={restartQuiz} />\n            ) : (\n                <>\n                    <DifficultySelector selectedDifficulty={setDifficulty} onDifficultyChange={setDifficulty} />\n                    {questions.length > 0 && (\n                        <Question\n                            question={questions[currentQuestionIndex].question}\n                            answers={questions[currentQuestionIndex].answers}\n                            onAnswerSelection={handleAnswerSelection}\n                        />\n                    )}\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default Quiz;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}