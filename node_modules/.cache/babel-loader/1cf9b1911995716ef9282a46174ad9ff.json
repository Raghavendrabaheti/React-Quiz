{"ast":null,"code":"var _jsxFileName = \"/Users/raghav/Desktop/Raghav/web development/ReactDSA/react-quiz-app/src/components/Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport AnswerButton from './AnswerButton';\nimport Question from './Question';\nimport qdata from './question.json';\nimport FinalScore from './FinalScore';\nimport DifficultySelector from './DifficultySelector';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [isQuizFinished, setIsQuizFinished] = useState(false);\n  const [difficulty, setDifficulty] = useState('kol');\n  console.log(qdata);\n  useEffect(() => {\n    // fetch('/react-quiz-app/public/question.json')\n    //     .then(response => response.json())\n    //     .then(data => {\n    //         setQuestions(data[difficulty]);\n    //     })\n    //     .catch(error => console.error(\"Error loading questions:\", error));\n    let data = qdata;\n    data.setQuestions(data[difficulty] || []);\n  }, [difficulty]);\n  const handleAnswerSelection = isCorrect => {\n    if (isCorrect) {\n      setScore(prevScore => prevScore + 1);\n    }\n    const nextQuestion = currentQuestionIndex + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestionIndex(nextQuestion);\n    } else {\n      setIsQuizFinished(true);\n    }\n  };\n  const restartQuiz = () => {\n    setCurrentQuestionIndex(0);\n    setQuestions([]);\n    setScore(0);\n    setIsQuizFinished(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Score : \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isQuizFinished ? /*#__PURE__*/_jsxDEV(FinalScore, {\n        score: score,\n        onRestart: restartQuiz\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: questions.length > 0 ? /*#__PURE__*/_jsxDEV(Question, {\n          question: questions[currentQuestionIndex].question,\n          answers: questions[currentQuestionIndex].answers,\n          onAnswerSelection: handleAnswerSelection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(DifficultySelector, {\n          selectedDifficulty: setDifficulty,\n          onDifficultyChange: setDifficulty\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 23\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Quiz, \"mxSnQA3T9xaJWM6KzLwYM/ep/Sw=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","AnswerButton","Question","qdata","FinalScore","DifficultySelector","jsxDEV","_jsxDEV","Fragment","_Fragment","Quiz","_s","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","score","setScore","isQuizFinished","setIsQuizFinished","difficulty","setDifficulty","console","log","data","handleAnswerSelection","isCorrect","prevScore","nextQuestion","length","restartQuiz","children","fileName","_jsxFileName","lineNumber","columnNumber","onRestart","question","answers","onAnswerSelection","selectedDifficulty","onDifficultyChange","_c","$RefreshReg$"],"sources":["/Users/raghav/Desktop/Raghav/web development/ReactDSA/react-quiz-app/src/components/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport AnswerButton from './AnswerButton';\nimport Question from './Question';\nimport qdata from './question.json';\nimport FinalScore from './FinalScore';\nimport DifficultySelector from './DifficultySelector';\n\nconst Quiz = () => {\n    const [questions, setQuestions] = useState([]);\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n    const [score, setScore] = useState(0);\n    const [isQuizFinished, setIsQuizFinished] = useState(false);\n    const [difficulty, setDifficulty] = useState('kol');\n\n    console.log(qdata);\n\n    useEffect(() => {\n        // fetch('/react-quiz-app/public/question.json')\n        //     .then(response => response.json())\n        //     .then(data => {\n        //         setQuestions(data[difficulty]);\n        //     })\n        //     .catch(error => console.error(\"Error loading questions:\", error));\n        let data = qdata;\n        data.\n        setQuestions(data[difficulty] || []); \n\n    }, [difficulty]);\n\n    const handleAnswerSelection = (isCorrect) => {\n        if (isCorrect) {\n            setScore(prevScore => prevScore + 1);\n        }\n        const nextQuestion = currentQuestionIndex + 1;\n        if (nextQuestion < questions.length) {\n            setCurrentQuestionIndex(nextQuestion);\n        } else {\n            setIsQuizFinished(true);\n        }\n    };\n\n    const restartQuiz = () => {\n        setCurrentQuestionIndex(0);\n        setQuestions([]);\n        setScore(0);\n        setIsQuizFinished(false);\n    };\n\n    return (\n        <>\n        <div>\n            <h1>Score : {score}</h1>\n        </div>\n        <div>\n            {isQuizFinished ? (\n                <FinalScore score={score} onRestart={restartQuiz} />\n            ) : (\n                <>\n                    {questions.length > 0 ? (\n                        <Question\n                            question={questions[currentQuestionIndex].question}\n                            answers={questions[currentQuestionIndex].answers}\n                            onAnswerSelection={handleAnswerSelection}\n                        />\n                    ):<DifficultySelector selectedDifficulty={setDifficulty} onDifficultyChange={setDifficulty} />}\n                </>\n            )}\n        </div>\n        </>\n    );\n};\n\nexport default Quiz;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}